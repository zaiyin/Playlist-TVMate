---
port: 7890
socks-port: 7891
redir-port: 7892
tproxy-port: 7895
mixed-port: 7893
allow-lan: true
mode: script
log-level: info
ipv6: false
external-controller: 0.0.0.0:9090
external-ui: "/usr/share/openclash/dashboard"
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  listen: 0.0.0.0:7874
  fallback-filter:
  geoip: true
  geoip-code: ID
  ipcidr:
  - 0.0.0.0/8
  - 10.0.0.0/8
  - 100.64.0.0/10
  - 127.0.0.0/8
  - 169.254.0.0/16
  - 172.16.0.0/12
  - 192.0.0.0/24
  - 192.0.2.0/24
  - 192.88.99.0/24
  - 192.168.0.0/16
  - 198.18.0.0/15
  - 198.51.100.0/24
  - 203.0.113.0/24
  - 224.0.0.0/4
  - 240.0.0.0/4
  - 255.255.255.255/32
  domain:
  - "+.google.com"
  - "+.facebook.com"
  - "+.youtube.com"
  - "+.githubusercontent.com"
  - "+.googlevideo.com"
  - "+.msftconnecttest.com"
  - "+.msftncsi.com"
  - msftconnecttest.com
  - msftncsi.com
  fake-ip-filter:
  - "+.pool.ntp.org"
  - ntp7.*.com
  - ntp6.*.com
  - ntp5.*.com
  - ntp4.*.com
  - ntp3.*.com
  - ntp2.*.com
  - ntp1.*.com
  - ntp.*.com
  - time7.*.com
  - time6.*.com
  - time5.*.com
  - time4.*.com
  - time3.*.com
  - time2.*.com
  - time1.*.com
  - time.*.apple.com
  - time.*.edu.cn
  - time.*.gov
  - time.*.com
  - "*.home.arpa"
  - "*.local"
  - "*.test"
  - "*.localhost"
  - "*.invalid"
  - "*.example"
  - "*.localdomain"
  - "+.stun.*.*.*.*.*"
  - "+.stun.*.*.*.*"
  - "+.stun.*.*.*"
  - "+.stun.*.*"
  - stun.*.*.*
  - stun.*.*
  - time1.cloud.tencent.com
  - "*.ntp.org.cn"
  - "*.time.edu.cn"
  - "*.lan"
  - "+.*"
  fake-ip-range: 198.18.0.1/16
  default-nameserver:
  - 8.8.8.8
  - 8.8.4.4
  - 192.168.8.1
  - 192.168.192.15
  nameserver-policy:
    www.microsoft.com: 20.53.203.50
  nameserver:
  - dhcp://"eth1"
  - 192.168.8.1
  - 8.8.8.8
  - 8.8.4.4
  - https://dns.google/dns-query
  - tls://dns.google
  - ns1-39.azure-dns.com
  - ns2-39.azure-dns.net
  - ns3-39.azure-dns.org
  - ns4-39.azure-dns.info
proxy-providers:
  master-isp:
    type: http
    path: "./proxy_provider/jomblo.yaml"
    url: https://raw.githubusercontent.com/zaiyin/Playlist-TVMate/main/jomblo.yaml
    interval: 10
    health-check:
      enable: false
      url: http://cp.cloudflare.com/generate_204
      interval: 99
proxy-groups:
- name: JombloGK
  type: select
  disable-udp: false
  proxies:
  - LOADBALANCE
  - MANUAL1
  - MANUAL2
  - AUTO
  - FAILOVER
  - RELAY
  - DIRECT
  - REJECT
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: PORT-BUKAN-UMUM-ARAHKAN-KE
  type: select
  disable-udp: false
  proxies:
  - LOADBALANCE
  - MANUAL1
  - MANUAL2
  - AUTO
  - FAILOVER
  - RELAY
  - DIRECT
  - REJECT
- name: LOADBALANCE
  type: load-balance
  strategy: round-robin
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: MANUAL1
  type: select
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: MANUAL2
  type: select
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: AUTO
  type: url-test
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
  tolerance: '99'
- name: FAILOVER
  type: fallback
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: RELAY
  type: relay
  disable-udp: false
  use:
  - master-isp
- name: RELAY-PUSAT-PISAH-TRAFIK
  type: relay
  disable-udp: false
  proxies:
  - WHATSAPP
  - FACEBOOK
  - INSTAGRAM
  - TIKTOK
  - GAME
  - AMANKAN-ANAK
- name: WHATSAPP
  type: select
  disable-udp: true
  proxies:
  - DIRECT
  - JombloGK
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: FACEBOOK
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - JombloGK
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: INSTAGRAM
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - JombloGK
- name: TIKTOK
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - JombloGK
- name: GAME
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - MANUAL1
  - MANUAL2
- name: AMANKAN-ANAK
  type: select
  disable-udp: false
  proxies:
  - REJECT
  - JombloGK
rule-providers:
  Website:
    type: file
    behavior: classical
    path: "./rule_provider/website.yaml"
  Whatsapp:
    type: file
    behavior: domain
    path: "./rule_provider/whatsapp.yaml"
  Facebook:
    type: file
    behavior: classical
    path: "./rule_provider/facebook.yaml"
  Instagram:
    type: file
    behavior: classical
    path: "./rule_provider/instagram.yaml"
  Tiktok:
    type: file
    behavior: classical
    path: "./rule_provider/tiktok.yaml"
  Game:
    type: file
    behavior: classical
    path: "./rule_provider/game.yaml"
  Safety-Child:
    type: file
    behavior: classical
    path: "./rule_provider/safety-child.yaml"
script:
  shortcuts:
    port_umum: dst_port not in [21, 22, 23, 53, 80, 123, 143, 194, 443, 465, 587,
      853, 993, 995, 998, 2052, 2053, 2082, 2083, 2086, 2095, 2096, 5222, 5228, 5229,
      5230, 8080, 8443, 8880, 8888, 8889]

  code: |
    def main(ctx, metadata):
        ruleset_action = {"Safety-Child": "AMANKAN-ANAK",
            "Facebook": "FACEBOOK",
            "Instagram": "INSTAGRAM",
            "Tiktok": "TIKTOK",
            "Game": "GAME",
            "Website": "JombloGK",
          }

        port = int(metadata["dst_port"])

        if metadata["network"] == "UDP":
            if port == "21,22,23,53,80,123,143,194,443,465,587,853,993,995,998,2052,2053,2082,2083,2086,2095,2096,5223,5228,5229,5230,5242,8080,8443,8880,8888,8889":
                ctx.log('[Script] matched QUIC traffic use JombloGK')
                return "JombloGK"

        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])

        port_list = [21, 22, 23, 53, 80, 123, 143, 194, 443, 465, 587, 853, 993, 995, 998, 2052, 2053, 2082, 2083, 2086, 2095, 2096, 5222, 5228, 5229, 5230, 8080, 8443, 8880, 8888, 8889]
        if port not in port_list:
            ctx.log('[Script] not common port use PORT-BUKAN-UMUM-ARAHKAN-KE')
            return "PORT-BUKAN-UMUM-ARAHKAN-KE"

        directkeywordlist = ["whatsapp"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use CHAT' % directkeyword)
            return "WHATSAPP"
        directkeywordlist = ["line"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use CHAT' % directkeyword)
            return "WHATSAPP"
        directkeywordlist = ["tiktok"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use SOSMED' % directkeyword)
            return "TIKTOK"

        directkeywordlist = ["heytapmobi"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["aihelp"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-MOBILELEGENDS' % directkeyword)
            return "PORT-MOBILELEGENDS"
        directkeywordlist = ["ml"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-MOBILELEGENDS' % directkeyword)
            return "PORT-MOBILELEGENDS"
        directkeywordlist = ["mobilelegends"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-MOBILELEGENDS' % directkeyword)
            return "PORT-MOBILELEGENDS"
        directkeywordlist = ["youngjoygame"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-MOBILELEGENDS' % directkeyword)
            return "PORT-MOBILELEGENDS"
        directkeywordlist = ["byteoversea"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["iframe"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["garena"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-GARENA' % directkeyword)
            return "PORT-GARENA"
        directkeywordlist = ["garenanow"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-GARENA' % directkeyword)
            return "PORT-GARENA"
        directkeywordlist = ["pubg"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-PUBG' % directkeyword)
            return "PORT-PUBG"
        directkeywordlist = ["pubgmobile"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-PUBG' % directkeyword)
            return "PORT-PUBG"
        directkeywordlist = ["tencent"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-PUBG' % directkeyword)
            return "PORT-PUBG"
        directkeywordlist = ["proxemabeta"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-PUBG' % directkeyword)
            return "PORT-PUBG"
        directkeywordlist = ["akamaihd"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["akamaized"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["yuanzapp"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["taobao"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["anticheatexpert"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["qq"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["shellfire"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["ragnarok"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"

        if metadata["dst_ip"] == "104.194.8.134":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])

        if metadata["dst_ip"] == "164.52.73.249":
            return "WHATSAPP"

        if metadata["dst_ip"] == "157.240.208.60":
            return "WHATSAPP"

        if metadata["dst_ip"] == "116.203.234.121,213.174.129.45":
            return "AMANKAN-ANAK"

        for ruleset in ruleset_action:
            if ctx.rule_providers[ruleset].match(metadata):
                return ruleset_action[ruleset]

        code = ctx.geoip(metadata["dst_ip"])
        if code == "ID":
            ctx.log('[Script] Geoip ID')
            return "JombloGK"

        ctx.log('[Script] JombloGK')
        return "JombloGK"
rules:
- SCRIPT,port_umum,PORT-BUKAN-UMUM-ARAHKAN-KE
- IP-CIDR,198.18.0.1/16,REJECT,no-resolve
- DST-PORT,989,AMANKAN-ANAK
- DST-PORT,10087,AMANKAN-ANAK
- IP-CIDR,198.18.0.1/16,AMANKAN-ANAK,no-resolve
- RULE-SET,Safety-Child,AMANKAN-ANAK
- RULE-SET,Instagram,INSTAGRAM
- RULE-SET,Whatsapp,WHATSAPP
- RULE-SET,Facebook,FACEBOOK
- RULE-SET,Tiktok,TIKTOK
- RULE-SET,Game,GAME
- RULE-SET,Website,JombloGK
- GEOIP,ID,JombloGK
- MATCH,JombloGK
tun:
  enable: true
  stack: system
  auto-route: false
  auto-detect-interface: false
  dns-hijack:
  - tcp://8.8.8.8:53
  - tcp://8.8.4.4:53
profile:
  store-selected: true
  store-fake-ip: true
secret: reyre
bind-address: "*"
